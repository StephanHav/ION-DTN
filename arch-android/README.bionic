Porting ION to the Android operating system has been a two-stage process:

1.	First, the ION source code had to be ported to compile successfully
in the "bionic" environment that is provided to Java native code that runs
in Android.  Bionic is a restricted libc that provides all of the functionality
that ION needs, though not always in exactly the same ways that these
capabilities are provided in Solaris or in a more full-featured Linux.

2.	Compilation in bionic enabled Java native method interface classes
to be written that invoke the native C functions of ION to operate a complete,
fully functional standard ION node on an Android device.

This was the original procedure for building ION in bionic:

1.	Download and install the Android software development kit.  For
details, see http://developer.android.com/sdk/index.html.

2.	Download and install the Android NDK (native development kit).  For
details, see http://developer.android.com/sdk/ndk/index.html.

3.	Navigate to the arch-android/iondtn subdirectory of the ION
distribution; this is the project directory for the ION DTN Android project.

4.	Run "ndk-build".  This would build ION for bionic, placing a file
named "libiondtn.so" in arch-android/iondtn/libs/armeabi.

JNI development has come a long way since the original bionic port, however.
The ION port to Java now comprises the following elements:

	- The ION-DTN Provider Application (IonDTN)
	- Documentation (Documentation)
	- Demo applications (DemoApplications)

Please open Documentation/index.html in your browser to get started!
